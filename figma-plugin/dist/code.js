(()=>{"use strict";var e=function(e,t,r,o){return new(r||(r=Promise))((function(n,s){function a(e){try{g(o.next(e))}catch(e){s(e)}}function i(e){try{g(o.throw(e))}catch(e){s(e)}}function g(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}g((o=o.apply(e,t||[])).next())}))};figma.showUI(__html__,{width:400,height:500}),figma.ui.onmessage=t=>e(void 0,void 0,void 0,(function*(){try{if(console.log("Plugin received raw message:",t),console.log("Message type:",null==t?void 0:t.type),console.log("Message structure:",{hasType:"type"in t,type:null==t?void 0:t.type,keys:Object.keys(t||{})}),!t||!t.type)throw new Error("Invalid message format: missing type");if("export-frames"===t.type){console.log("Starting export-frames process...");const t=figma.currentPage.selection;if(console.log("Current selection:",{count:t.length,types:t.map((e=>e.type)),names:t.map((e=>e.name))}),0===t.length)return console.log("No frames selected"),figma.notify("Please select at least one frame to export"),void figma.ui.postMessage({type:"export-result",error:"No frames selected"});const r=t.filter((e=>"FRAME"===e.type));if(console.log("Found frames:",{count:r.length,frames:r.map((e=>({name:e.name,id:e.id,type:e.type})))}),0===r.length)return console.log("No frame nodes in selection"),figma.notify("Please select at least one frame (not other elements)"),void figma.ui.postMessage({type:"export-result",error:"No frame nodes selected"});console.log("Starting export of frames...");const o=r.map((t=>function(t){return e(this,void 0,void 0,(function*(){try{console.log("Starting frame export for:",t.name,{id:t.id,type:t.type,width:t.width,height:t.height});const e={format:"PNG",constraint:{type:"SCALE",value:2}};console.log("Exporting frame with settings:",e);const r=yield t.exportAsync(e);console.log("Frame exported, image data size:",r.length);const o=figma.base64Encode(r);console.log("Image converted to base64, length:",o.length);const n={id:t.id,name:t.name,width:t.width,height:t.height,imageUrl:`data:image/png;base64,${o}`};return console.log("Frame data prepared:",{id:n.id,name:n.name,width:n.width,height:n.height,imageUrlLength:n.imageUrl.length}),n}catch(e){console.error("Error in exportFrameToImage:",e);const r=e instanceof Error?e.message:"Unknown error occurred";throw new Error(`Failed to export frame "${t.name}": ${r}`)}}))}(t)));console.log("Waiting for all frame exports to complete...");const n=yield Promise.all(o);if(!n||0===n.length)throw new Error("No frame data was generated during export");if(console.log("All frames exported:",{count:n.length,frames:n.map((e=>({name:e.name,id:e.id,dimensions:`${e.width}x${e.height}`,hasImageUrl:!!e.imageUrl,imageUrlLength:e.imageUrl.length})))}),!n.every((e=>e&&"string"==typeof e.id&&"string"==typeof e.name&&"number"==typeof e.width&&"number"==typeof e.height&&"string"==typeof e.imageUrl&&e.imageUrl.startsWith("data:image/png;base64,"))))throw new Error("Some frames failed validation");const s={type:"export-result",payload:{frames:n}};console.log("Preparing to send message to UI:",{type:s.type,frameCount:n.length,frames:n.map((e=>({name:e.name,id:e.id,hasImageUrl:!!e.imageUrl,imageUrlLength:e.imageUrl.length})))}),console.log("Sending postMessage to UI..."),figma.ui.postMessage(s),console.log("Message sent to UI"),figma.notify(`Successfully exported ${r.length} frame${r.length>1?"s":""}`)}if("send-to-extension"===t.type)try{if(!t.frames||!Array.isArray(t.frames))throw new Error("No frames provided to send to extension");if(!t.frames.every((e=>e&&"string"==typeof e.id&&"string"==typeof e.name&&"number"==typeof e.width&&"number"==typeof e.height&&"string"==typeof e.imageUrl)))throw new Error("Invalid frame data");figma.ui.postMessage({type:"frames-ready-for-extension",frames:t.frames}),console.log("Sent frames to extension:",{frameCount:t.frames.length,frames:t.frames.map((e=>({name:e.name,id:e.id,hasImageUrl:!!e.imageUrl})))}),figma.notify("Frames sent to Chrome extension")}catch(e){console.error("Error sending frames to extension:",e),figma.notify("Error sending frames to extension"),figma.ui.postMessage({type:"export-result",error:e instanceof Error?e.message:"Unknown error occurred"})}if("create-jira-issue"===t.type&&t.issueData)try{const r=yield function(t){return e(this,void 0,void 0,(function*(){try{const e=yield fetch("YOUR_JIRA_API_ENDPOINT",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fields:{project:{key:"YOUR_PROJECT_KEY"},summary:t.title,description:t.description,issuetype:{name:t.type},priority:{name:t.priority}}})});if(!e.ok)throw new Error("Failed to create Jira issue");return yield e.json()}catch(e){throw console.error("Error creating Jira issue:",e),e}}))}(t.issueData);figma.ui.postMessage({type:"jira-issue-created",issue:r}),figma.notify("Jira issue created successfully")}catch(e){figma.notify("Error creating Jira issue"),console.error(e)}}catch(e){console.error("Error in plugin message handler:",e),figma.notify("Error processing message"),figma.ui.postMessage({type:"export-result",error:e instanceof Error?e.message:"Unknown error occurred"})}}))})();